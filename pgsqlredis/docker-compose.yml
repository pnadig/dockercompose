version: '2.1'

volumes:
  # We'll define a volume that will store the data from the postgres databases:
  postgres-data:
    driver: local
  # The rabbitmq data store volume
  redis-data:
    driver: local
  # We'll also define a volume that will store gems installed manually after the initial app

services:
  # Our PostgreSQL service:
  postgres:
    image: postgres:9.6.1
    ports:
      # We'll bind our host's port 5432 to postgres's port 5432, so we can use
      # our database IDEs with it:
      - 5432:5432
    volumes:
      # Mount the DB dumps folder into the container, to be able to create & access database dumps:
      - ./db/dumps:/db/dumps
      # Mount out tmp folder, we might want to have access to something there during development:
      - ./tmp:/tmp
      # Mount our 'restoredb' script:
      - ./bin/restoredb:/bin/restoredb:ro
      # Mount our 'dumpdb' script:
      - ./bin/dumpdb:/bin/dumpdb:ro
      # We'll mount the 'postgres-data' volume into the location Postgres stores it's data:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 3x4mpl3

  # Our Redis service:
  redis:
    image: redis:3.2.4-alpine
    ports:
      # We'll bind our host's port 6379 to redis's port 6379, so we can use
      # Redis Desktop Manager (or other tools) with it:
      - 6379:6379
    volumes:
      # We'll mount the 'redis-data' volume into the location redis stores it's data:
      - redis-data:/var/lib/redis
    command: redis-server --appendonly yes
